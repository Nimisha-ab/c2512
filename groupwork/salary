#include <iostream>
#include <cmath>
#include <climits>
#include <cstdlib>
using std::cout;
using std::cin;
using std::endl;

const int MAX_SALARIES = 100;

void readSalaries(int salaries[], int& size) {
    int salary;
    size = 0; 

    cout << "Enter salaries (-1 to stop):" << endl;

    while (true) {
        cin >> salary;
        if (salary == -1) {
            break;
        }
        if (size < MAX_SALARIES) { 
            salaries[size] = (salary); 
            size++;
            
        } else {
            cout << "Maximum number of salaries reached." <<endl;
            break;
        }
    }
}



int findSum(int salaries[], int size) 
{
    int sum = 0;
    for (int i = 0; i < size; i++) 
    {
        sum += salaries[i];
    }
    return sum;
}

float findAverage( int salaries[], int size)
{
    if (size == 0)
    return 0; 
    float average = ((findSum(salaries, size)) / (float)size);
    return average;
}




bool isPrime(int number) 
{
    for (int i = 2; i<= sqrt(number); i++)
    {
        if ((number % i) == 0)
        {
             return false;
        }
         
    }
      return true;
}
  

  
int findPrimeSalariesCount(int salaries[], int size)
{
    int primeCount = 0;
    
    for (int i = 0; i < size; i++)
      {
        if (isPrime(salaries[i]))
        {
            primeCount++;
        }
      }
    return primeCount;
}



bool isNumberMinimum4Digit(int number)
{
    
  
  while (number > 999){
       return true;
  }
  return false;
}


  
int findMin4DigitSalariesCount( int salaries[],int size){
     int count = 0;
      for(int i=0;i<size;i++){
        if (isNumberMinimum4Digit(salaries[i])){
            count++;
        }
      }
 return count;
}



int findMaxSalary(int salaries[], int size) 
{
    int maxSalary = INT_MIN;
    
    for (int i=0; i<size; i++)
    {
        if (maxSalary<salaries[i])
        {
            maxSalary = salaries[i];
        }
    }
    
    return maxSalary; 
}

bool isOdd(int number)
{
    if (((number % 2) != 0))
    {
        return true;
    }
    else
    {
        return false;
   }
}


int findSumOfOddSalaries(int salaries[], int size)
{
    int sum = 0;
    for (int i = 0 ; i < size ; i++)
    {
        if (isOdd(salaries[i]))
        {
            sum += salaries[i];
        }
    }
    
    return sum;
}


int find2ndMinOddSalary(int salaries[], int size)
{
    int minsalary = INT_MAX;
    int second_min_salary = INT_MAX;
    for (int i = 0 ; i < size ; i++)
    {
        if (isOdd(salaries[i]))
        {
            if (minsalary > salaries[i])
            {
                second_min_salary = minsalary;
                minsalary = salaries[i];
                
            }
        }
    }
    return second_min_salary;
}



void test(void)
{
    int size;
    int salaries[MAX_SALARIES];
    
    readSalaries(salaries, size);
    
    float averageSalary = findAverage(salaries, size);
    
    int primeSalariesCount = findPrimeSalariesCount(salaries, size);
    
    int min4DigitSalariesCount = findMin4DigitSalariesCount(salaries, size);
    
    int maxSalary = findMaxSalary(salaries, size);
    
    int sumOfOddSalaries = findSumOfOddSalaries(salaries, size);
    
    int secondMinOddSalary = find2ndMinOddSalary(salaries, size);
    
    cout << "Average Salary: "<< averageSalary << endl;

    cout << "Prime Salaries Count: " << primeSalariesCount << endl;

    cout << "4-Digit Salaries Count: " << min4DigitSalariesCount << endl;

    cout << "Maximum Salary: " << maxSalary << endl;

    cout << "Sum of Odd Salaries: " << sumOfOddSalaries << endl;

    cout << "Second Minimum Odd Salary: "<<secondMinOddSalary<<endl;

    if (isPrime(maxSalary))
     {
         cout <<  "Max Salary is prime" <<endl;
    }
    else
    {
        
        cout << "Max Salary is not prime" <<endl;
    }
}

int main(void)
{
    test();
    
 return EXIT_SUCCESS;
